{{- $appVersion := .Chart.AppVersion -}}
{{- $namespace := .Release.Namespace -}}
{{- $releaseName := .Release.Name }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "tbmq.node.label" . }}
  namespace: {{ $namespace }}
  annotations: {{- .Values.tbmq.statefulSet.annotations | toYaml | nindent 4 }}
  labels:
    app: {{ include "tbmq.node.label" . }}
spec:
  serviceName: {{ include "tbmq.node.label" . }}
  replicas: {{ .Values.tbmq.statefulSet.replicas }}
  selector:
    matchLabels:
      app: {{ include "tbmq.node.label" . }}
  template:
    metadata:
      annotations:
        {{- if .Values.tbmq.enableChecksumAnnotations }}
        checksum/config: {{ include (print $.Template.BasePath "/tbmq/tbmq-default-configmap.yml") . | sha256sum }}
        checksum/env: {{ include (print $.Template.BasePath "/tbmq/tbmq-custom-env.yml") . | sha256sum }}
        checksum/postgres-config: {{ include (print $.Template.BasePath "/postgres/postgres-configmap.yml") . | sha256sum }}
        checksum/postgres-secret: {{ include (print $.Template.BasePath "/postgres/postgres-secret.yml") . | sha256sum }}
        checksum/redis-config: {{ include (print $.Template.BasePath "/redis/redis-configmap.yml") . | sha256sum }}
        checksum/kafka-config: {{ include (print $.Template.BasePath "/kafka/kafka-configmap.yml") . | sha256sum }}
        {{- end }}
        {{- with .Values.tbmq.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: {{ include "tbmq.node.label" . }}
    spec:
      nodeSelector:
        {{- .Values.tbmq.nodeSelector | toYaml | nindent 8 }}
      affinity:
        {{- .Values.tbmq.affinity | toYaml | nindent 8 }}
      securityContext:
        {{- .Values.tbmq.securityContext | toYaml | nindent 8 }}
      imagePullSecrets:
        - name: {{ .Values.tbmq.imagePullSecret }}
      initContainers: {{ include "tbmq.initcontainers" . | indent 8 }}
      containers:
        - name: server
          imagePullPolicy: {{ .Values.tbmq.imagePullPolicy }}
          image: {{ include "tbmq.node.image" . }}
          ports:
            {{- range .Values.tbmq.ports }}
            - containerPort: {{ .value }}
              name: {{ .name }}
              protocol: {{ .protocol | default "TCP" | toString }}
            {{- end }}
          env:
            - name: TB_SERVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TB_SERVICE_SINGLETON_MODE
              value: {{ if gt (int .Values.tbmq.statefulSet.replicas) 1 }}"false"{{ else }}"true"{{ end }}
            - name: HTTP_LOG_CONTROLLER_ERROR_STACK_TRACE
              value: "false"
            {{- if and .Values.loadbalancer.mqtt.enabled .Values.loadbalancer.mqtt.mutualTls.enabled }}
            - name: LISTENER_SSL_ENABLED
              value: "true"
            - name: LISTENER_SSL_CREDENTIALS_TYPE
              value: "PEM"
            - name: LISTENER_SSL_PEM_CERT
              value: "/ssl-config/server.pem"
            - name: LISTENER_SSL_PEM_KEY
              value: "/ssl-config/mqttserver_key.pem"
            {{- if .Values.loadbalancer.mqtt.mutualTls.privateKeyPasswordSecret }}
            - name: LISTENER_SSL_PEM_KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.loadbalancer.mqtt.mutualTls.privateKeyPasswordSecret }}
                  key: {{ .Values.loadbalancer.mqtt.mutualTls.privateKeyPasswordSecretKey }}
            {{- end }}
            {{- end }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "tbmq.postgres.secretName" . }}
                  key: {{ include "tbmq.postgres.secretPasswordKey" . }}
            {{- if .Values.externalPostgresql.existingSecretUsernameKey }}
            - name: SPRING_DATASOURCE_USER
              valueFrom:
                  secretKeyRef:
                    name: {{ include "tbmq.postgres.secretName" . }}
                    key: {{ include "tbmq.postgres.secretUsernameKey" . }}
            {{- end }}
            {{- if or (index .Values "redis-cluster" "usePassword") .Values.externalRedis.existingSecret }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "tbmq.redis.secretName" . }}
                  key: {{ include "tbmq.redis.secretKey" . }}
            {{- end }}
          envFrom:
            {{- include "tbmq.postgres.configuration.ref" . | indent 12 }}
            {{- include "tbmq.kafka.configuration.ref" . | indent 12 }}
            {{- include "tbmq.redis.configuration.ref" . | indent 12 }}
            - configMapRef:
                name: {{ $releaseName }}-tbmq-custom-env
          readinessProbe:
            {{- .Values.tbmq.readinessProbe | toYaml | nindent 12 }}
          livenessProbe:
            {{- .Values.tbmq.livenessProbe | toYaml | nindent 12 }}
          resources:
            {{- .Values.tbmq.resources | toYaml | nindent 12 }}
          volumeMounts:
            - name: {{ printf "%s-tbmq-node-config" $releaseName }}
              mountPath: /config/thingsboard-mqtt-broker.conf
              subPath: thingsboard-mqtt-broker.conf
            - name: {{ printf "%s-tbmq-node-logback-config" $releaseName }}
              mountPath: /config/logback.xml
              subPath: logback.xml
            {{- if and .Values.loadbalancer.mqtt.enabled .Values.loadbalancer.mqtt.mutualTls.enabled }}
            - name: {{ printf "%s-tbmq-node-mqtts-config" $releaseName }}
              mountPath: /ssl-config
            {{- end }}
            - name: {{ $releaseName }}-tbmq-node-logs
              mountPath: /var/log/thingsboard-mqtt-broker
            - name: {{ $releaseName }}-tbmq-node-data
              mountPath: /data
              readOnly: false
      restartPolicy: {{ .Values.tbmq.restartPolicy }}
      volumes:
        - name: {{ printf "%s-tbmq-node-config" $releaseName }}
          configMap:
            name: {{ include "tbmq.configMapName" . }}
            items:
              - key: conf
                path: thingsboard-mqtt-broker.conf
        - name: {{ printf "%s-tbmq-node-logback-config" $releaseName }}
          configMap:
            name: {{ include "tbmq.logbackConfigMapName" . }}
            items:
              - key: logback
                path: logback.xml
        {{- if and .Values.loadbalancer.mqtt.enabled .Values.loadbalancer.mqtt.mutualTls.enabled }}
        - name: {{ printf "%s-tbmq-node-mqtts-config" $releaseName }}
          configMap:
            name: {{ .Values.loadbalancer.mqtt.mutualTls.configMapName }}
            items:
              - key: server.pem
                path: server.pem
              - key: mqttserver_key.pem
                path: mqttserver_key.pem
        {{- end }}
        - name: {{ $releaseName }}-tbmq-node-logs
          emptyDir: { }
        - name: {{ printf "%s-tbmq-node-data" $releaseName }}
          emptyDir: { }
